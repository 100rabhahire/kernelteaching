Device driver fundamentals: probing and interrupts
==================================================

The code and the device tree overlay is located in exercises/led-gpio-key-module/

0. Preparations
---------------

Connecting the LED-button device.
Connect the cables(there are two different variants) like this:
(just below the serial cable)

PI GPIO         Cable variant 1         Cable variant2
-------         ---------------         --------------
GPIO 18         Orange                  Yellow
GND             Brown                   Blue
GPIO 23         Red                     Green

See http://www.hobbytronics.co.uk/image/data/tutorial/raspberry-pi/gpio-pinout-rev2.jpg


To enable enumeration of the gpio-led device, we have to add it to 
the RPI device tree. This is easy to do using something called device tree
overlays. During boot, a base device tree blob can be amened by the bootloader
to include extra devices.

* Copy the .dts file from gpio-led-module/ to arch/arm/boot/dts/overlays

* Add the .dts file to the makefile in arch/arm/boot/dts

* Build the dtb target(like the previous lab)

* Copy the resulting led-gpio-key.dtbo file (in arch/arm/boot/dts/overlays) to
	<rpi root>/boot/overlays

* Enable the overlay by adding the following line
	dtoverlay=led-gpio-key
	to <rpi root>/boot/overlays

* Reboot the pi and check that a led-gpio-key node exist in 
	/proc/devicetree/soc/ledkey

* Look at the attributes that the node exports in the sysfs, and
compare to what's in the .dts file.

1. Build the out of tree driver, copy it to the pi insert it
------------------------------------------------------------

A good first step is to copy the led-gpio-key module directory to i.e.
~/src and create a git project so you can go back if you mess anything up.

i.e.

cp -r ../kernelteaching/exercises/led-gpio-key-module ~/src
cd ~/src/led-gpio-key-module
git init .
git add *
git commit -m "Initial commit"


* Perform make in the driver's directory, transfer the resulting .ko-file
to the pi(anywhere is good) and insert it.

Make sure you pass parameters when building:

make ARCH=arm CROSS_COMPILE=$RPI_CC KERNEL=/home/student/src/rpi-linux

Then:

* Inspect the module info with modinfo
* Check that is it is loaded with lsmod


2. Make the driver enumerate by adding the correct compatible-string
--------------------------------------------------------------------

* The device table is not correct. Fix this. Have a look at the device tree
overlay to figure out the right string.

To load a new version of the module you have to unload it first:
sudo rmmod led-gpio-key

* Check that a new input device is created in /dev/input

3. Implement an interrupt handler
---------------------------------

The gpio interrupt should result in a report to the input framework. Enable the interrupt in the probe function.

* Start by reading the code and try to undestand what every bit does. 

* Use a threaded irq(devm_request_threaded_irq) to implement the top/bottom half pattern.
	Note: you don't need to do anything in the top half for this driver
	Documentation: https://www.kernel.org/doc/htmldocs/kernel-api/API-request-threaded-irq.html

TIP: Search for other drivers doing the same thing, i.e:
	git grep devm_request_threaded_irq drivers/input 

Test that events are emitted using evtest.
Install evtest (on the pi) if needed: sudo apt-get install evtest


