Device driver fundamentals: probing and interrupts
==================================================

The code and the device tree overlay is located in gpio-led-module/

0. Preparations
---------------

Set the following environment variables(cut an paste into a shell window)

KERNEL=/home/student/src/rpi-linux
ARCH=arm
CROSS_COMPILE=$RPI_CC

To enable enumeration of the gpio-led device, we have to add it to 
the RPI device tree. This is easy to do using something called device tree
overlays. During boot, a base device tree blob can be amened by the bootloader
to include extra devices.

* Copy the .dts file from gpio-led-module/ to arch/arm/boot/dts/overlays

* Add the .dts file to the makefile in arch/arm/boot/dts

* Build the dtb target(like the previous lab)

* Copy the resulting .dtb file (in arch/arm/boot/dts/overlays) to
	<rpi root>/boot/overlays

* Enable the overlay by adding the following line
	dtoverlay=led-gpio-key
	to <rpi root>/boot/overlays

* Reboot the pi and check that a led-gpio-key node exist in 
	/proc/devicetree

1. Build the out of tree driver, copy it to the pi insert it
------------------------------------------------------------

* Perform make in the driver's directory, transfer the resulting .ko-file
to the pi(anywhere is good) and insert it.

* Check that is it is loaded with lsmod

2. Make the driver enumerate by adding the correct compatible-string
--------------------------------------------------------------------

* The device table is not correct. Fix this. Have a look at the device tree
overlay to figure out the right string.

* Check that a new input device is created in /dev/input

3. Implement an interrupt handler
---------------------------------

The gpio interrupt should result in a report to the input framework. Enable the interrupt in the probe function.

Use a threaded irq(devm_request_threaded_irq)
Test that events are emitted using evtest.



